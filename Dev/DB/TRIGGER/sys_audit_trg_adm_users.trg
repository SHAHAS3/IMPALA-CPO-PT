CREATE OR REPLACE TRIGGER SYS_AUDIT_TRG_ADM_USERS AFTER INSERT OR DELETE OR UPDATE  OF USERID,NAME ON ADM_USERS REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW 
DECLARE    p_time timestamp;     p_type char(1); BEGIN    p_time := systimestamp;   if INSERTING then       p_type := 'I';   elsif DELETING then       p_type := 'D';   else       p_type := 'U';   end if; if (:OLD.USERID is not null and :NEW.USERID is not null and :OLD.USERID != :NEW.USERID) or (:OLD.USERID is not null and :NEW.USERID is null) or (:OLD.USERID is null and :NEW.USERID is not null) then    insert into SYS_AUDITS(ID,AUDIT_COLUMNS_ID,USER_ID,OP_TYPE,OP_DATE,INITIAL_VALUE,LAST_VALUE,ID1,ID2, USER_NAME )    values (IDSEQ.nextval,25671,nvl(GLOBALVARS.GUSID,GLOBALVARS.GUSID),p_type,p_time,:OLD.USERID,:NEW.USERID,:NEW.ID,NULL,GLOBALVARS.GUSER); end if; if (:OLD.NAME is not null and :NEW.NAME is not null and :OLD.NAME != :NEW.NAME) or (:OLD.NAME is not null and :NEW.NAME is null) or (:OLD.NAME is null and :NEW.NAME is not null) then    insert into SYS_AUDITS(ID,AUDIT_COLUMNS_ID,USER_ID,OP_TYPE,OP_DATE,INITIAL_VALUE,LAST_VALUE,ID1,ID2, USER_NAME )    values (IDSEQ.nextval,25672,nvl(GLOBALVARS.GUSID,GLOBALVARS.GUSID),p_type,p_time,:OLD.NAME,:NEW.NAME,:NEW.ID,NULL,GLOBALVARS.GUSER); end if; end;
/

